package com.company.iptvgames.eatbean;

public class MapForEachLevel {
	public static int[][] mapcontent;
	
	public static int getmapcells(int number,int row, int col){		
		switch(number){
		case 1:
			mapcontent = new int[][]{{1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2},
				{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8},{8,0,1,5,2,0,1,5,2,0,9,0,1,5,2,0,8},
				{8,0,8,0,8,0,8,0,8,0,8,0,8,0,8,0,8},{8,0,6,5,7,0,6,5,7,0,10,0,6,5,7,0,8},
				{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8},{8,0,12,5,13,0,12,5,13,0,11,0,12,5,13,0,8},
				{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8},{6,5,5,5,2,0,1,13,0,12,2,0,1,5,5,5,7},
				{0,0,0,0,8,0,8,0,0,0,8,0,8,0,0,0,0},{1,5,5,5,7,0,6,5,5,5,7,0,6,5,5,5,2},
				{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8},{8,0,1,5,2,0,9,0,1,5,2,0,1,5,2,0,8},
				{8,0,8,0,8,0,8,0,8,0,8,0,8,0,8,0,8},{8,0,6,5,7,0,10,0,6,5,7,0,6,5,7,0,8},
				{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8},{8,0,12,5,13,0,11,0,12,5,13,0,12,5,13,0,8},
				{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8},{6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7}};
			break;
		case 2:
			mapcontent = new int[][]{{1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2},
					{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8},{8,0,12,5,5,5,5,13,0,12,5,5,5,5,13,0,8},
					{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8},{8,0,12,5,5,5,5,13,0,12,5,5,5,5,13,0,8},
					{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8},{8,0,12,5,5,5,5,13,0,12,5,5,5,5,13,0,8},
					{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8},{6,5,5,5,2,0,1,13,0,12,2,0,1,5,5,5,7},
					{0,0,0,0,8,0,8,0,0,0,8,0,8,0,0,0,0},{1,5,5,5,7,0,6,5,5,5,7,0,6,5,5,5,2},
					{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8},{8,0,9,0,9,0,9,0,9,0,9,0,9,0,9,0,8},
					{8,0,8,0,8,0,8,0,8,0,8,0,8,0,8,0,8},{8,0,8,0,8,0,8,0,8,0,8,0,8,0,8,0,8},
					{8,0,8,0,8,0,8,0,8,0,8,0,8,0,8,0,8},{8,0,10,0,10,0,10,0,10,0,10,0,10,0,10,0,8},
					{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8},{6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7}};
			break;
		case 3:
			mapcontent = new int[][]{{1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2},
					{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8},{8,0,1,5,5,2,0,1,5,2,0,1,5,5,2,0,8},
					{8,0,6,5,5,7,0,8,0,8,0,6,5,5,7,0,8},{8,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,8},
					{8,0,1,5,5,2,0,8,0,8,0,1,5,5,2,0,8},{8,0,6,5,5,7,0,6,5,7,0,6,5,5,7,0,8},
					{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8},{6,5,5,5,2,0,1,13,0,12,2,0,1,5,5,5,7},
					{0,0,0,0,8,0,8,0,0,0,8,0,8,0,0,0,0},{1,5,5,5,7,0,6,5,5,5,7,0,6,5,5,5,2},
					{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8},{8,0,1,5,5,2,0,1,5,2,0,1,5,5,2,0,8},
					{8,0,6,5,5,7,0,8,0,8,0,6,5,5,7,0,8},{8,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,8},
					{8,0,1,5,5,2,0,8,0,8,0,1,5,5,2,0,8},{8,0,6,5,5,7,0,6,5,7,0,6,5,5,7,0,8},
					{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8},{6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,7}};
			break;
		case 4:
			mapcontent = new int[][]{{1,5,5,5,5,5,5,2,0,1,5,5,5,5,5,5,2},
					{8,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,8},{8,0,1,5,5,2,0,8,0,8,0,1,5,5,2,0,8},
					{8,0,6,5,5,7,0,8,0,8,0,6,5,5,7,0,8},{8,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,8},
					{8,0,1,5,5,2,0,8,0,8,0,1,5,5,2,0,8},{8,0,6,5,5,7,0,6,5,7,0,6,5,5,7,0,8},
					{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8},{6,5,5,5,2,0,1,13,0,12,2,0,1,5,5,5,7},
					{0,0,0,0,8,0,8,0,0,0,8,0,8,0,0,0,0},{1,5,5,5,7,0,6,5,5,5,7,0,6,5,5,5,2},
					{8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8},{8,0,1,5,5,2,0,1,5,2,0,1,5,5,2,0,8},
					{8,0,6,5,5,7,0,8,0,8,0,6,5,5,7,0,8},{8,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,8},
					{8,0,1,5,5,2,0,8,0,8,0,1,5,5,2,0,8},{8,0,6,5,5,7,0,8,0,8,0,6,5,5,7,0,8},
					{8,0,0,0,0,0,0,8,0,8,0,0,0,0,0,0,8},{6,5,5,5,5,5,5,7,0,6,5,5,5,5,5,5,7}};
			break;
		}
		
		return mapcontent[row][col];
	}
	
	public static int getbeancells(int number,int row, int col){		
		switch(number){
		case 1:
			mapcontent = new int[][]{{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
					{0,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0},{0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0},
					{0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0},{0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0},
					{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,1,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0},
					{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0},
					{0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0},{0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0},
					{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0},
					{0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0},{0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0},
					{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,1,0},
					{0,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};
			break;
		case 2:
			mapcontent = new int[][]{{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
					{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0},
					{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0},
					{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0},
					{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0},
					{0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0},{0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0},
					{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},
					{0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},{0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},
					{0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},{0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},
					{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};
			break;
		case 3:
			mapcontent = new int[][]{{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
					{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0},
					{0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0},{0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0},
					{0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0},{0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0},
					{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0},
					{0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0},{0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0},
					{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0},
					{0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0},{0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0},
					{0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0},{0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0},
					{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};
			break;
		case 4:
			mapcontent = new int[][]{{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
					{0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0},{0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0},
					{0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0},{0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0},
					{0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0},{0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0},
					{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0},
					{0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0},{0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0},
					{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0},
					{0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0},{0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0},
					{0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0},{0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0},
					{0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};
			break;
		}
		
		return mapcontent[row][col];
	}

}
