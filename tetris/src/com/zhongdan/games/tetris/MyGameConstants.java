package com.zhongdan.games.tetris;

public class MyGameConstants {

	public static class Playboard {
		public static int WIDTH = 10;
		public static int HEIGHT = 15;
	}

	public static class Brick {
		public static int WIDTH = 29;
		public static int HEIGHT = 29;
		public static int START_LEFT = 175;
		public static int START_TOP = 5;

		public static int[][][][] brickStart = {//
		{// Type 1 : 两个折，反Z
				{ { 4, 0 }, { 5, 0 }, { 3, 1 }, { 4, 1 } },// Direct 1
						{ { 4, 0 }, { 4, 1 }, { 5, 1 }, { 5, 2 } },// Direct 2
						{ { 4, 0 }, { 5, 0 }, { 3, 1 }, { 4, 1 } },// Direct 3
						{ { 4, 0 }, { 4, 1 }, { 5, 1 }, { 5, 2 } } // Direct 4
				}, {// Type 2 : 方块
				{ { 4, 0 }, { 5, 0 }, { 4, 1 }, { 5, 1 } },// Direct 1
						{ { 4, 0 }, { 5, 0 }, { 4, 1 }, { 5, 1 } },// Direct 2
						{ { 4, 0 }, { 5, 0 }, { 4, 1 }, { 5, 1 } },// Direct 3
						{ { 4, 0 }, { 5, 0 }, { 4, 1 }, { 5, 1 } } // Direct 4
				}, {// Type 3 : 一个折，反7
				{ { 3, 0 }, { 4, 0 }, { 5, 0 }, { 5, 1 } },// Direct 1
						{ { 5, 0 }, { 5, 1 }, { 5, 2 }, { 4, 2 } },// Direct 2
						{ { 3, 0 }, { 3, 1 }, { 4, 1 }, { 5, 1 } },// Direct 3
						{ { 4, 0 }, { 5, 0 }, { 4, 1 }, { 4, 2 } } // Direct 4
				}, {// Type 4 : T型
				{ { 4, 0 }, { 3, 1 }, { 4, 1 }, { 5, 1 } },// Direct 1
						{ { 4, 0 }, { 4, 1 }, { 4, 2 }, { 5, 1 } },// Direct 2
						{ { 3, 0 }, { 4, 0 }, { 5, 0 }, { 4, 1 } },// Direct 3
						{ { 5, 0 }, { 4, 1 }, { 5, 1 }, { 5, 2 } } // Direct 4
				}, {// Type 5 : 长条
				{ { 3, 0 }, { 4, 0 }, { 5, 0 }, { 6, 0 } },// Direct 1
						{ { 4, 0 }, { 4, 1 }, { 4, 2 }, { 4, 3 } },// Direct 2
						{ { 3, 0 }, { 4, 0 }, { 5, 0 }, { 6, 0 } },// Direct 3
						{ { 4, 0 }, { 4, 1 }, { 4, 2 }, { 4, 3 } } // Direct 4
				}, {// Type 6 : 两个折，Z
				{ { 3, 0 }, { 4, 0 }, { 4, 1 }, { 5, 1 } },// Direct 1
						{ { 5, 0 }, { 4, 1 }, { 5, 1 }, { 4, 2 } },// Direct 2
						{ { 3, 0 }, { 4, 0 }, { 4, 1 }, { 5, 1 } },// Direct 3
						{ { 5, 0 }, { 4, 1 }, { 5, 1 }, { 4, 2 } } // Direct 4
				}, {// Type 7 : 一个折，7
				{ { 3, 0 }, { 4, 0 }, { 5, 0 }, { 3, 1 } },// Direct 1
						{ { 5, 0 }, { 5, 1 }, { 5, 2 }, { 4, 0 } },// Direct 2
						{ { 5, 0 }, { 3, 1 }, { 4, 1 }, { 5, 1 } },// Direct 3
						{ { 4, 0 }, { 5, 2 }, { 4, 1 }, { 4, 2 } } // Direct 4
				} };
		public static int[][][][] brickTransform = {//
		{// type 1 : 两个折
				{ { 0, 0 }, { 1, -1 }, { 0, 2 }, { 1, 1 } },// direct 1 -> 2
						{ { 0, 0 }, { -1, 1 }, { 0, -2 }, { -1, -1 } },// direct 2 -> 3
						{ { 0, 0 }, { 1, -1 }, { 0, 2 }, { 1, 1 } }, // direct 4 -> 1
						{ { 0, 0 }, { -1, 1 }, { 0, -2 }, { -1, -1 } } // direct 3 -> 4
				}, {// type 2 : 方块
				{ { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 } },// direct 1 -> 2
						{ { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 } },// direct 2 -> 3
						{ { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 } },// direct 3 -> 4
						{ { 0, 0 }, { 0, 0 }, { 0, 0 }, { 0, 0 } } // direct 4 -> 1
				}, {// type 3 : 一个折
				{ { 0, 2 }, { 1, 1 }, { 2, 0 }, { 1, -1 } },// direct 1 -> 2
						{ { 0, -2 }, { 0, -2 }, { -1, -1 }, { -1, 1 } },// direct 2 -> 3
						{ { 0, 1 }, { -1, 2 }, { 0, 0 }, { 1, -1 } },// direct 3 -> 4
						{ { 0, -1 }, { 0, -1 }, { -1, 1 }, { -1, 1 } } // direct 4 -> 1
				}, {// type 4 : T型
				{ { 0, 0 }, { 0, 1 }, { 1, 0 }, { 0, 0 } },// direct 1 -> 2
						{ { 0, -1 }, { -1, 0 }, { -2, 1 }, { 0, -1 } },// direct 2 -> 3
						{ { 0, 2 }, { 1, 0 }, { 1, 0 }, { 1, 1 } },// direct 3 -> 4
						{ { 0, -1 }, { 0, -1 }, { 0, -1 }, { -1, 0 } } // direct 4 -> 1
				}, {// type 5 : 长条
				{ { 0, 1 }, { 1, 0 }, { 2, -1 }, { 3, -2 } },// direct 1 -> 2
						{ { 0, -1 }, { -1, 0 }, { -2, 1 }, { -3, 2 } },// direct 2 -> 3
						{ { 0, 1 }, { 1, 0 }, { 2, -1 }, { 3, -2 } },// direct 3 -> 4
						{ { 0, -1 }, { -1, 0 }, { -2, 1 }, { -3, 2 } } // direct 4 -> 1
				}, {// type 6 : 两个折
				{ { 0, 2 }, { 1, 0 }, { 0, 1 }, { 1, -1 } },// direct 1 -> 2
						{ { 0, -2 }, { -1, 0 }, { 0, -1 }, { -1, 1 } },// direct 2 -> 3
						{ { 0, 2 }, { 1, 0 }, { 0, 1 }, { 1, -1 } },// direct 3 -> 4
						{ { 0, -2 }, { -1, 0 }, { 0, -1 }, { -1, 1 } } // direct 4 -> 1
				}, {// type 7 : 一个折
				{ { 0, 2 }, { 1, 1 }, { 2, 0 }, { -1, 1 } },// direct 1 -> 2
						{ { 0, 0 }, { 0, -2 }, { -1, -1 }, { 1, 1 } },// direct 2 -> 3
						{ { 0, -1 }, { 1, 2 }, { 0, 0 }, { 1, -1 } },// direct 3 -> 4
						{ { 0, -1 }, { -2, -1 }, { -1, 1 }, { -1, -1 } } // direct 4 -> 1
				} };
	}

}
